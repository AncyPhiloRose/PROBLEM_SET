11)For any rating where the reviewer is the same as the director of the movie, return the reviewer name, 
 movie title, and number of stars. 

>>select re.name,m.title,ra.stars from movie m inner join rating ra on m.mid=ra.mid 
  inner join reviewer re on re.rid=ra.rid where director=name;

12)Return all reviewer names and movie names together in a single list, alphabetized. 
(Sorting by the first name of the reviewer and first word in the title is fine; 
no need for special processing on last names or removing "The".) 

>>select title from movie union select name from reviewer order by title,name;

13)Find the titles of all movies not reviewed by Chris Jackson. 

 >>select title from movie where director not in (select director from movie where name='Chris Jackson');

14)For each rating that is the lowest (fewest stars) currently in the database, 
return the reviewer name, movie title, and number of stars.
 
>>select re.name,title,ra.stars from reviewer re join rating ra on re.rid=ra.rid 
  join movie m on m.mid=ra.mid (select min(stars) from rating);

15)Find the names of all reviewers who have contributed three or more ratings. 

>>select * from reviewer where rid>=3;

16)List movie titles and average ratings, from highest-rated to lowest-rated. 
If two or more movies have the same average rating, list them in alphabetical order. 

>>select m.title,avg(stars) as average from movie m join rating ra on m.mid =ra.mid group by mid order by average desc,title;

17)For each director, return the director's name together with the title(s) of
the movie(s) they directed that received the highest rating among all of their movies, 
and the value of that rating. Ignore movies whose director is NULL.

>>select director,title,max(stars) from movie m join rating ra on m.mid =ra.mid where director is not null group by director;








